{"version":3,"sources":["components/todos/TodoItem.js","components/todos/Todos.js","components/layout/Header.js","components/todos/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","getStyle","background","padding","borderBottom","textDecoration","_this","props","todo","completed","_this$props$todo","this","id","title","react_default","a","createElement","style","type","onChange","markComplete","bind","onClick","delTodo","btnStyle","Component","color","border","borderRadius","cursor","float","Todos","console","log","todos","map","TodoItem_TodoItem","key","Header","headerStyle","Link","linkStyle","to","textAlign","AddTodo","state","e","setState","Object","defineProperty","target","name","value","onSubmit","preventDefault","addTodo","display","flex","placeholder","className","About","Fragment","App","axios","delete","concat","then","res","toConsumableArray","filter","post","data","_this2","get","_this3","HashRouter","Route","exact","path","render","AddTodo_AddTodo","todos_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c0c5028.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class TodoItem extends Component {\n  getStyle = () => {\n    return {\n      background: \"#f4f4f4\",\n      padding: \"10px\",\n      borderBottom: \"1px #ccc dotted\",\n      textDecoration: this.props.todo.completed ? \"line-through\" : \"none\"\n    };\n  };\n\n  render() {\n    const { id, title } = this.props.todo;\n    return (\n      <div style={this.getStyle()}>\n        <p>\n          <input\n            type=\"checkbox\"\n            onChange={this.props.markComplete.bind(this, id)}\n          />{\" \"}\n          {\"\"}\n          {title}\n          <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>\n            x\n          </button>\n        </p>\n      </div>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired\n};\n\nconst btnStyle = {\n  background: \"#ff0000\",\n  color: \"#fff\",\n  border: \"none\",\n  padding: \"5px 10px\",\n  borderRadius: \"50%\",\n  cursor: \"pointer\",\n  float: \"right\"\n};\n","import React, { Component } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport PropTypes from \"prop-types\";\n\nclass Todos extends Component {\n  render() {\n    console.log(this.props.todos);\n    return this.props.todos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        markComplete={this.props.markComplete}\n        delTodo={this.props.delTodo}\n      />\n    ));\n  }\n}\n\nTodos.propTypes = {\n  todos: PropTypes.array.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired\n};\n\nexport default Todos;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Header() {\n  return (\n    <header style={headerStyle}>\n      <h1>TodoList</h1>\n      <Link style={linkStyle} to=\"/\">\n        Home\n      </Link>{\" \"}\n      |{\" \"}\n      <Link style={linkStyle} to=\"/about\">\n        About\n      </Link>\n    </header>\n  );\n}\n\nconst headerStyle = {\n  background: \"#333\",\n  color: \"#fff\",\n  textAlign: \"center\",\n  padding: \"10px\"\n};\n\nconst linkStyle = {\n  color: \"#fff\",\n  textDecoration: \"none\"\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class AddTodo extends Component {\n  state = {\n    title: \"\"\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.addTodo(this.state.title);\n    this.setState({ title: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} style={{ display: \"flex\" }}>\n        <input\n          type=\"text\"\n          name=\"title\"\n          style={{ flex: \"10\", padding: \"5px\" }}\n          placeholder=\"Add Todo...\"\n          value={this.state.title}\n          onChange={this.onChange}\n        />\n        <input\n          type=\"submit\"\n          value=\"Submit\"\n          className=\"btn\"\n          style={{ flex: \"1\" }}\n        />\n      </form>\n    );\n  }\n}\n\nAddTodo.propTypes = {\n  addTodo: PropTypes.func.isRequired\n};\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <React.Fragment>\n      <h1>About</h1>\n      <p>This is the TodoList app v1.0.0.</p>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Todos from \"./components/todos/Todos\";\nimport Header from \"./components/layout/Header\";\nimport AddTodo from \"./components/todos/AddTodo\";\nimport About from \"./components/pages/About\";\n// import uuid from \"uuid\";\n\nimport \"./App.css\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  state = {\n    todos: []\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\n      .then(res => this.setState({ todos: res.data }));\n  }\n\n  // Toggle Complete\n  markComplete = id => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    });\n  };\n\n  // Delete Todo\n  delTodo = id => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then(res =>\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      })\n    );\n  };\n\n  // Add Todo\n  addTodo = title => {\n    axios\n      .post(\"https://jsonplaceholder.typicode.com/todos\", {\n        title,\n        completed: false\n      })\n      .then(res => this.setState({ todos: [...this.state.todos, res.data] }));\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <React.Fragment>\n                  <AddTodo addTodo={this.addTodo} />\n                  <Todos\n                    todos={this.state.todos}\n                    markComplete={this.markComplete}\n                    delTodo={this.delTodo}\n                  />\n                </React.Fragment>\n              )}\n            />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}